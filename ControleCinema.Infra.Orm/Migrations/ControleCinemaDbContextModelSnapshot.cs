// <auto-generated />
using System;
using ControleCinema.Infra.Orm.Compartilhado;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ControleCinema.Infra.Orm.Migrations
{
    [DbContext(typeof(ControleCinemaDbContext))]
    partial class ControleCinemaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ControleCinema.Dominio.ModuloFilme.Filme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Duracao")
                        .HasColumnType("int");

                    b.Property<int>("Genero_Id")
                        .HasColumnType("int");

                    b.Property<bool>("Lancamento")
                        .HasColumnType("bit");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Genero_Id");

                    b.ToTable("TBFilme", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Duracao = 90,
                            Genero_Id = 2,
                            Lancamento = false,
                            Titulo = "Aladdin"
                        },
                        new
                        {
                            Id = 2,
                            Duracao = 127,
                            Genero_Id = 1,
                            Lancamento = true,
                            Titulo = "Wolverine vs. Deadpool"
                        });
                });

            modelBuilder.Entity("ControleCinema.Dominio.ModuloFuncionario.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.HasKey("Id");

                    b.ToTable("TBFuncionario", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Login = "c.tanaka",
                            Nome = "Caio Tanaka",
                            Senha = "sFQZT5W2kK8BUAO8uhhQ"
                        },
                        new
                        {
                            Id = 2,
                            Login = "junior.teixeira201",
                            Nome = "Júnior Teixeira",
                            Senha = "eNsoNQxmzglCOs3OK76a"
                        },
                        new
                        {
                            Id = 3,
                            Login = "marcia.silva0306",
                            Nome = "Márcia Silva",
                            Senha = "AW6m9OHzgB28v4ZNS5jY"
                        });
                });

            modelBuilder.Entity("ControleCinema.Dominio.ModuloGenero.Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("TBGenero", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "Ação"
                        },
                        new
                        {
                            Id = 2,
                            Descricao = "Animação"
                        },
                        new
                        {
                            Id = 3,
                            Descricao = "Aventura"
                        },
                        new
                        {
                            Id = 4,
                            Descricao = "Comédia"
                        },
                        new
                        {
                            Id = 5,
                            Descricao = "Romance"
                        },
                        new
                        {
                            Id = 6,
                            Descricao = "Terror"
                        });
                });

            modelBuilder.Entity("ControleCinema.Dominio.ModuloSala.Sala", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacidade")
                        .HasColumnType("int");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TBSala", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacidade = 30,
                            Numero = 1
                        },
                        new
                        {
                            Id = 2,
                            Capacidade = 35,
                            Numero = 2
                        },
                        new
                        {
                            Id = 3,
                            Capacidade = 32,
                            Numero = 5
                        });
                });

            modelBuilder.Entity("ControleCinema.Dominio.ModuloSessao.Ingresso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("MeiaEntrada")
                        .HasColumnType("bit");

                    b.Property<int>("NumeroAssento")
                        .HasColumnType("int");

                    b.Property<int>("Sessao_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Sessao_Id");

                    b.ToTable("TBIngresso", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MeiaEntrada = false,
                            NumeroAssento = 10,
                            Sessao_Id = 1
                        },
                        new
                        {
                            Id = 2,
                            MeiaEntrada = true,
                            NumeroAssento = 25,
                            Sessao_Id = 1
                        },
                        new
                        {
                            Id = 3,
                            MeiaEntrada = false,
                            NumeroAssento = 30,
                            Sessao_Id = 2
                        });
                });

            modelBuilder.Entity("ControleCinema.Dominio.ModuloSessao.Sessao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Encerrada")
                        .HasColumnType("bit");

                    b.Property<int>("Filme_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Inicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumeroMaximoIngressos")
                        .HasColumnType("int");

                    b.Property<int>("Sala_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Filme_Id");

                    b.HasIndex("Sala_Id");

                    b.ToTable("TBSessao", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 4,
                            Encerrada = false,
                            Filme_Id = 2,
                            Inicio = new DateTime(2024, 8, 7, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            NumeroMaximoIngressos = 25,
                            Sala_Id = 2
                        },
                        new
                        {
                            Id = 3,
                            Encerrada = false,
                            Filme_Id = 1,
                            Inicio = new DateTime(2024, 8, 10, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            NumeroMaximoIngressos = 35,
                            Sala_Id = 3
                        },
                        new
                        {
                            Id = 2,
                            Encerrada = false,
                            Filme_Id = 1,
                            Inicio = new DateTime(2024, 8, 9, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            NumeroMaximoIngressos = 25,
                            Sala_Id = 3
                        },
                        new
                        {
                            Id = 1,
                            Encerrada = true,
                            Filme_Id = 1,
                            Inicio = new DateTime(2024, 7, 20, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            NumeroMaximoIngressos = 20,
                            Sala_Id = 2
                        },
                        new
                        {
                            Id = 6,
                            Encerrada = false,
                            Filme_Id = 2,
                            Inicio = new DateTime(2024, 8, 2, 19, 30, 0, 0, DateTimeKind.Unspecified),
                            NumeroMaximoIngressos = 30,
                            Sala_Id = 1
                        },
                        new
                        {
                            Id = 5,
                            Encerrada = true,
                            Filme_Id = 2,
                            Inicio = new DateTime(2024, 8, 2, 19, 30, 0, 0, DateTimeKind.Unspecified),
                            NumeroMaximoIngressos = 28,
                            Sala_Id = 2
                        });
                });

            modelBuilder.Entity("ControleCinema.Dominio.ModuloFilme.Filme", b =>
                {
                    b.HasOne("ControleCinema.Dominio.ModuloGenero.Genero", "Genero")
                        .WithMany()
                        .HasForeignKey("Genero_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_TBFilme_TBGenero");

                    b.Navigation("Genero");
                });

            modelBuilder.Entity("ControleCinema.Dominio.ModuloSessao.Ingresso", b =>
                {
                    b.HasOne("ControleCinema.Dominio.ModuloSessao.Sessao", "Sessao")
                        .WithMany("Ingressos")
                        .HasForeignKey("Sessao_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sessao");
                });

            modelBuilder.Entity("ControleCinema.Dominio.ModuloSessao.Sessao", b =>
                {
                    b.HasOne("ControleCinema.Dominio.ModuloFilme.Filme", "Filme")
                        .WithMany("Sessoes")
                        .HasForeignKey("Filme_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ControleCinema.Dominio.ModuloSala.Sala", "Sala")
                        .WithMany()
                        .HasForeignKey("Sala_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Filme");

                    b.Navigation("Sala");
                });

            modelBuilder.Entity("ControleCinema.Dominio.ModuloFilme.Filme", b =>
                {
                    b.Navigation("Sessoes");
                });

            modelBuilder.Entity("ControleCinema.Dominio.ModuloSessao.Sessao", b =>
                {
                    b.Navigation("Ingressos");
                });
#pragma warning restore 612, 618
        }
    }
}
